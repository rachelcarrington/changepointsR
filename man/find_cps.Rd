% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_cps.R
\name{find_cps}
\alias{find_cps}
\title{Find changepoints.}
\usage{
find_cps(
  y,
  method,
  threshold = NULL,
  maxiter = NULL,
  num_rand_ints = NULL,
  rand_ints = NULL,
  seeded = FALSE,
  decay = NULL
)
}
\arguments{
\item{y}{Numeric vector of data.}

\item{method}{Character string: \code{"bs"} for binary segmentation; \code{"wbs"} for wild binary segmentation;
\code{"not"} for narrowest over threshold.}

\item{threshold}{Numeric; changepoint detection threshold for CUSUM statistic.}

\item{maxiter}{Integer; maximum number of changepoints to detect.}

\item{num_rand_ints}{Integer; number of random intervals. Ignored if \code{rand_ints} is specified, or if
\code{method = "bs"}.}

\item{rand_ints}{Matrix containing random intervals for wild binary segmentation or narrowest over threshold.
Ignored if \code{method = "bs"}.}

\item{seeded}{Logical; if \code{TRUE} and \code{method = "wbs"}, then seeded binary segmentation is implemented.}

\item{decay}{Decay parameter for seeded binary segmentation; only used if \code{method = "wbs"} and \code{seeded = TRUE}.}
}
\value{
...
}
\description{
Implement binary segmentation, wild binary segmentation, narrowest over threshold for change in mean model.
}
\examples{
set.seed(100)
y <- rnorm(100) + c(rep(1,45), rep(-1,10), rep(1,45))
results_bs <- find_cps(y, "bs", threshold=4)
print(results_bs$results)

results_wbs <- find_cps(y, "wbs", threshold=4, num_rand_ints=100)
print(results_wbs$results)

results_not <- find_cps(y, "not", threshold=4, num_rand_ints=100)
print(results_not$results)

}
